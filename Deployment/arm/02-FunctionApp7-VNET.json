{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "appName": {
        "type": "string",
        "defaultValue": "[concat('fnapp', uniqueString(resourceGroup().id))]",
        "metadata": {
          "description": "The name of the function app that you wish to create."
        }
      },
      "storageAccountType": {
        "type": "string",
        "defaultValue": "Standard_LRS",
        "allowedValues": [
          "Standard_LRS",
          "Standard_GRS",
          "Standard_RAGRS"
        ],
        "metadata": {
          "description": "Storage Account type"
        }
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Location for all resources."
        }
      },
      "appInsightsLocation": {
        "type": "string",
        "defaultValue":"[resourceGroup().location]",
        "metadata": {
          "description": "Location for Application Insights"
        }
      },
      "KeyVault_Name": {
        "type": "string",
        "metadata": {
          "description": "The name of KV to read credential of service principal."
        }
      },
      "KeyVault_SP_ClientId": {
        "type": "string",
        "metadata": {
          "description": "KV secret name of client id"
        }
      },  
      "KeyVault_SP_ClientSecret": {
        "type": "string",
        "metadata": {
          "description": "KV secret name of client secret"
        }
      },
      "KeyVault_SP_TenantId": {
        "type": "string",
        "metadata": {
          "description": "KV secret name of tenant id"
        }
      },
      //"KeyVault_StorageAccount_AccessKey": {
      //  "type": "string",
        //"defaultValue": "[concat('fnapp', uniqueString(resourceGroup().id))]",
      //  "metadata": {
      //    "description": "KV secret name of storage account access key"
      //  }
      //},
      "StorageAccount_LandingContainer": {
        "type": "string",
        "metadata": {
          "description": "container that azure function will listen for waiting for files to arrive to start running"
        }
      },
      "StorageAccount_RawContainer": {
        "type": "string",
        "metadata": {
          "description": "Raw Container Name"
        }
      },
      "StorageAccount_StagingContainer": {
        "type": "string",
        "metadata": {
          "description": "Staging Container Name"
        }
      },
      "StorageAccount_CuratedContainer": {
        "type": "string",
        "metadata": {
          "description": "Cuarted Container Name"
        }
      },
      "StorageAccount_Name": {
        "type": "string",
        "metadata": {
          "description": "The name of Storage Account of MDD framework"
        }
      },
      "Synapse_Name": {
        "type": "string",
        "metadata": {
          "description": "The name synapse pf MDD framrwork"
        }
      },
      "Synapse_PoolName": {
        "type": "string",
        "metadata": {
          "description": "The name of of spark pool of MDD Framework"
        }
      },     
      "runtime": {
        "type": "string",
        "defaultValue": "python",
        "allowedValues": [
          "node",
          "dotnet",
          "java",
          "python"
        ],
        "metadata": {
          "description": "The language worker runtime to load in the function app."
        }
      },
      "VNETId": {
        "type": "string",
        "metadata": {
          "description": "The VNET id that this function app attached to"
        }
      },
      "vnetName": {
        "type": "string",
        "metadata": {
          "description": "The name of of VNET that this function app attached to"
        }
      },
      "FunctionOutbound": {
        "type": "string",
        "metadata": {
          "description": "The name of of function outbound that this function app uses for VNET Integration"
        }
      }  
    },
    "variables": {
      "functionAppName": "[parameters('appName')]",
      "KeyVault_Name": "[parameters('KeyVault_Name')]",
      "KeyVault_SP_ClientId": "[parameters('KeyVault_SP_ClientId')]",
      "KeyVault_SP_ClientSecret": "[parameters('KeyVault_SP_ClientSecret')]",
      "KeyVault_SP_TenantId": "[parameters('KeyVault_SP_TenantId')]",
      "StorageAccount_LandingContainer": "[parameters('StorageAccount_LandingContainer')]",
      "StorageAccount_RawContainer": "[parameters('StorageAccount_RawContainer')]",
      "StorageAccount_StagingContainer": "[parameters('StorageAccount_StagingContainer')]",
      "StorageAccount_CuratedContainer": "[parameters('StorageAccount_CuratedContainer')]",
      "MDDFStorageAccount_Name": "[parameters('StorageAccount_Name')]",
      "Synapse_Name": "[parameters('Synapse_Name')]",
      "Synapse_PoolName": "[parameters('Synapse_PoolName')]",
      "hostingPlanName": "[parameters('appName')]",
      "applicationInsightsName": "[parameters('appName')]",
      "AFstorageAccountName": "[concat(uniquestring(resourceGroup().id), 'azfunctions')]",
      "functionWorkerRuntime": "[parameters('runtime')]"
    },
    "resources": [
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2020-06-01",
      "name": "[parameters('vnetName')]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('vnetAddressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[parameters('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetAddressPrefix')]",
              "delegations": [
                {
                  "name": "delegation",
                  "properties": {
                    "serviceName": "Microsoft.Web/serverFarms"
                  }
                }
              ]
            }
          }
        ]
      }
    },
      {
        "type": "Microsoft.Storage/storageAccounts",
        "apiVersion": "2019-06-01",
        "name": "[variables('AFstorageAccountName')]",
        "location": "[parameters('location')]",
        "sku": {
          "name": "[parameters('storageAccountType')]"
        },
        "kind": "Storage",
        "properties": {
          "minimumTlsVersion": "TLS1_2"
        }
      },
      {
        "type": "Microsoft.Web/serverfarms",
        "apiVersion": "2020-06-01",
        "name": "[variables('hostingPlanName')]",
        "location": "[parameters('location')]",
        "sku": {
          "name": "Y1",
          "tier": "Dynamic"
        },
        //"kind": "linux",
        "properties": {
          "name": "[variables('hostingPlanName')]",
          "reserved": true,
          "computeMode": "Dynamic"
        }
      },
      {
        "type": "Microsoft.Web/sites",
        "apiVersion": "2020-06-01",
        "name": "[variables('functionAppName')]",
        "location": "[parameters('location')]",
        "kind": "functionapp,linux",
        "identity": {
            "type": "SystemAssigned"
        },
        "dependsOn": [
          "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
          "[resourceId('Microsoft.Storage/storageAccounts', variables('AFstorageAccountName'))]"
        ],
        "properties": {
            "enabled": true,
            "hostNameSslStates": [
                {
                    "name": "[concat(parameters('appName'), '.azurewebsites.net')]",
                    "sslState": "Disabled",
                    "hostType": "Standard"
                },
                {
                    "name": "[concat(parameters('appName'), '.scm.azurewebsites.net')]",
                    "sslState": "Disabled",
                    "hostType": "Repository"
                }
            ],
          "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
          "reserved": true,
          "isXenon": false,
          "hyperV": false,
          "vnetRouteAllEnabled": true,
          "siteConfig": {
            "numberOfWorkers": 1,
            "linuxFxVersion": "PYTHON|3.9",
            "acrUseManagedIdentityCreds": false,
            "alwaysOn": false,
            "http20Enabled": false,
            "functionAppScaleLimit": 0,
            "minimumElasticInstanceCount": 1,
            "appSettings": [
              {
                "name": "AzureWebJobsStorage",
                "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('AFstorageAccountName'), ';EndpointSuffix=', environment().suffixes.storage, ';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('AFstorageAccountName')), '2019-06-01').keys[0].value)]"
              },
              {
                "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('AFstorageAccountName'), ';EndpointSuffix=', environment().suffixes.storage, ';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('AFstorageAccountName')), '2019-06-01').keys[0].value)]"
              },
              {
                "name": "MDDF_Storage",
                "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('MDDFStorageAccount_Name'), ';EndpointSuffix=', environment().suffixes.storage, ';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('MDDFStorageAccount_Name')), '2019-06-01').keys[0].value)]"
              },
              {
                "name": "WEBSITE_CONTENTSHARE",
                "value": "[toLower(variables('functionAppName'))]"
              },
              {
                "name": "FUNCTIONS_EXTENSION_VERSION",
                "value": "~4"
              },
              {
                "name": "PYTHON_ENABLE_WORKER_EXTENSIONS",
                "value": "1"
              },
              {
                "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                "value": "[reference(resourceId('microsoft.insights/components', variables('applicationInsightsName')), '2020-02-02-preview').InstrumentationKey]"
              },
              {
                "name": "FUNCTIONS_WORKER_RUNTIME",
                "value": "[variables('functionWorkerRuntime')]"
              },
            /*{
                "name": "KeyVault_Name",
                "value": "[variables('KeyVault_Name')]"
              },
              {
                "name": "AZURE_CLIENT_ID",
                "value": "[concat('@Microsoft.KeyVault(SecretUri=https://', variables('KeyVault_Name'),'.vault.azure.net/secrets/',variables('KeyVault_SP_ClientId'),')')]"
              },
              {
                "name": "AZURE_CLIENT_SECRET",
                "value": "[concat('@Microsoft.KeyVault(SecretUri=https://', variables('KeyVault_Name'),'.vault.azure.net/secrets/',variables('KeyVault_SP_ClientSecret'),')')]"
              },
              {
                "name": "AZURE_TENANT_ID",
                "value": "[concat('@Microsoft.KeyVault(SecretUri=https://', variables('KeyVault_Name'),'.vault.azure.net/secrets/',variables('KeyVault_SP_TenantId'),')')]"
              },*/
              {
                "name": "StorageAccount_LandingContainer",
                "value": "[variables('StorageAccount_LandingContainer')]"
              },
              {
                "name": "StorageAccount_RawContainer",
                "value": "[variables('StorageAccount_RawContainer')]"
              },
              {
                "name": "StorageAccount_StagingContainer",
                "value": "[variables('StorageAccount_StagingContainer')]"
              },
              {
                "name": "StorageAccount_CuratedContainer",
                "value": "[variables('StorageAccount_CuratedContainer')]"
              },
              {
                "name": "StorageAccount_Name",
                "value": "[variables('MDDFStorageAccount_Name')]"
              },
              {
                "name": "Synapse_Name",
                "value": "[variables('Synapse_Name')]"
              },
              {
                "name": "Synapse_PoolName",
                "value": "[variables('Synapse_PoolName')]"
              },
              {
                "name": "FunctionApp_Name",
                "value": "[variables('functionAppName')]"
              }
            ]
          },
          "scmSiteAlsoStopped": false,
          "clientAffinityEnabled": false,
          "clientCertEnabled": false,
          "clientCertMode": "Required",
          "hostNamesDisabled": false,
          "containerSize": 1536,
          "dailyMemoryTimeQuota": 0,
          "httpsOnly": false,
          "redundancyMode": "None",
          "storageAccountRequired": false,
          //"virtualNetworkSubnetId": "[concat(parameters('VNETId'), '/subnets/',parameters('FunctionOutbound'))]",
          "keyVaultReferenceIdentity": "SystemAssigned"
        }
      },
      {
          "type": "Microsoft.Web/sites/basicPublishingCredentialsPolicies",
          "apiVersion": "2022-03-01",
          "name": "[concat(parameters('appName'), '/ftp')]",
          "location": "Australia East",
          "dependsOn": [
              "[resourceId('Microsoft.Web/sites', parameters('appName'))]"
          ],
          "properties": {
              "allow": true
          }
      },
      {
          "type": "Microsoft.Web/sites/basicPublishingCredentialsPolicies",
          "apiVersion": "2022-03-01",
          "name": "[concat(parameters('appName'), '/scm')]",
          "location": "Australia East",
          "dependsOn": [
              "[resourceId('Microsoft.Web/sites', parameters('appName'))]"
          ],
          "properties": {
              "allow": true
          }
      },
      {
          "type": "Microsoft.Web/sites/config",
          "apiVersion": "2022-03-01",
          "name": "[concat(parameters('appName'), '/web')]",
          "location": "Australia East",
          "dependsOn": [
              "[resourceId('Microsoft.Web/sites', parameters('appName'))]"
          ],
          "properties": {
              "numberOfWorkers": 1,
              "defaultDocuments": [
                  "Default.htm",
                  "Default.html",
                  "Default.asp",
                  "index.htm",
                  "index.html",
                  "iisstart.htm",
                  "default.aspx",
                  "index.php"
              ],
              "netFrameworkVersion": "v4.0",
              "linuxFxVersion": "PYTHON|3.9",
              "requestTracingEnabled": false,
              "remoteDebuggingEnabled": false,
              "remoteDebuggingVersion": "VS2019",
              "httpLoggingEnabled": false,
              "acrUseManagedIdentityCreds": false,
              "logsDirectorySizeLimit": 35,
              "detailedErrorLoggingEnabled": false,
              "publishingUsername": "[concat('$',parameters('appName'))]", 
              "scmType": "None",
              "use32BitWorkerProcess": false,
              "webSocketsEnabled": false,
              "alwaysOn": false,
              "managedPipelineMode": "Integrated",
              "virtualApplications": [
                  {
                      "virtualPath": "/",
                      "physicalPath": "site\\wwwroot",
                      "preloadEnabled": false
                  }
              ],
              "loadBalancing": "LeastRequests",
              "experiments": {
                  "rampUpRules": []
              },
              "autoHealEnabled": false,
              //"vnetName": "[concat(parameters('appName'), '/',uniqueString(resourceGroup().id),'_',parameters('FunctionOutbound'))]",
              //"vnetRouteAllEnabled": true,
              //"vnetPrivatePortsCount": 0,
              "cors": {
                  "allowedOrigins": [
                      "https://portal.azure.com"
                  ],
                  "supportCredentials": false
              },
              "localMySqlEnabled": false,
              //"managedServiceIdentityId": 20198,
             /* "ipSecurityRestrictions": [
                  {
                      "ipAddress": "Any",
                      "action": "Allow",
                      "priority": 1,
                      "name": "Allow all",
                      "description": "Allow all access"
                  }
              ],
              "scmIpSecurityRestrictions": [
                  {
                      "ipAddress": "Any",
                      "action": "Allow",
                      "priority": 1,
                      "name": "Allow all",
                      "description": "Allow all access"
                  }
              ],
              "scmIpSecurityRestrictionsUseMain": false,*/
              "http20Enabled": false,
              "minTlsVersion": "1.2",
              "scmMinTlsVersion": "1.2",
              "ftpsState": "FtpsOnly",
              "preWarmedInstanceCount": 1,
              "functionAppScaleLimit": 0,
              "functionsRuntimeScaleMonitoringEnabled": true,
              "minimumElasticInstanceCount": 1,
              "azureStorageAccounts": {}
          }
      },
    /*  {
          "type": "Microsoft.Web/sites/hostNameBindings",
          "apiVersion": "2022-03-01",
          "name": "[concat(parameters('appName'), '/', parameters('appName'), '.azurewebsites.net')]",
          "location": "Australia East",
          "dependsOn": [
              "[resourceId('Microsoft.Web/sites', parameters('appName'))]"
          ],
          "properties": {
              "siteName": "parameters('appName')",
              "hostNameType": "Verified"
          }
      },*/

     /*{
          "type": "Microsoft.Web/sites/virtualNetworkConnections",
          "apiVersion": "2022-03-01",
          "name": "[concat(parameters('appName'), '/',uniqueString(resourceGroup().id),'_',parameters('FunctionOutbound'))]",                                               
          "location": "Australia East",
          "dependsOn": [
              "[resourceId('Microsoft.Web/sites', parameters('appName'))]"
          ],
          "properties": {
              "vnetResourceId": "[concat(parameters('VNETId'), '/subnets/',parameters('FunctionOutbound'))]",
              "isSwift": true
          }
      },*/
      {
        "type": "microsoft.insights/components",
        "apiVersion": "2020-02-02-preview",
        "name": "[variables('applicationInsightsName')]",
        "location": "[parameters('appInsightsLocation')]",
        "kind": "web",
        "tags": {
          "[concat('hidden-link:', resourceId('Microsoft.Web/sites', variables('applicationInsightsName')))]": "Resource"
        },
        "properties": {
          "Application_Type": "web",
          "ApplicationId": "[variables('applicationInsightsName')]",
          "Request_Source": "rest"
        }
      }
    ]
  }
  
  